@using Auth.Views.Manage
@inject SignInManager<ApplicationUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

<ul class="nav nav-pills nav-stacked">
    <li class="@ManageNavPages.IndexNavClass(ViewContext)"><a asp-action="Index" asp-controller="Manage">Profile</a></li>
    <li class="@ManageNavPages.ChangePasswordNavClass(ViewContext)"><a asp-action="ChangePassword" asp-controller="Manage">Password</a></li>
    @if (hasExternalLogins)
    {
        <li class="@ManageNavPages.ExternalLoginsNavClass(ViewContext)"><a asp-action="ExternalLogins" asp-controller="Manage">External logins</a></li>
    }
    <li class="@ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)"><a asp-action="TwoFactorAuthentication" asp-controller="Manage">Two-factor authentication</a></li>
    <li class="@ManageNavPages.CreateWalletNavClass(ViewContext)"><a asp-action="Create" asp-controller="Wallets">Create wallet</a></li>
    <li class="@ManageNavPages.DepositNavClass(ViewContext)"><a asp-action="Deposit" asp-controller="Deposits">Deposit funds</a></li>
    <li class="@ManageNavPages.DepositHistoryNavClass(ViewContext)"><a asp-action="Index" asp-controller="Deposits">Deposit history</a></li>
</ul>

